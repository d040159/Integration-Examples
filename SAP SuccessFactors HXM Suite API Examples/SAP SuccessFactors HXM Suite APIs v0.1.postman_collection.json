{
	"info": {
		"_postman_id": "27b738c0-c4f6-4962-81f1-8c5008b62f92",
		"name": "SAP SuccessFactors HXM Suite APIs v0.11",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SAP SuccessFactors Platform",
			"item": [
				{
					"name": "Discover and Manage OData APIs",
					"item": [
						{
							"name": "Refresh Metadata of OData APIs",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}refreshMetadata",
									"host": [
										"{{APIServerURLODataV2}}refreshMetadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the metadata of all the V2 OData APIs (huge file)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}$metadata",
									"host": [
										"{{APIServerURLODataV2}}$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get metadata for selected entities (smaller file)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User,Photo/$metadata",
									"host": [
										"{{APIServerURLODataV2}}User,Photo"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get metadata for a specific entity User and Photo using language DE",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User,Photo/$metadata?sap-language=de-DE",
									"host": [
										"{{APIServerURLODataV2}}User,Photo"
									],
									"path": [
										"$metadata"
									],
									"query": [
										{
											"key": "sap-language",
											"value": "de-DE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "The OData Entity-Entity for User",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Entity('User')",
									"host": [
										"{{APIServerURLODataV2}}Entity('User')"
									]
								}
							},
							"response": []
						},
						{
							"name": "The OData Entity-Entity for EmpJob",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Entity('EmpJob')",
									"host": [
										"{{APIServerURLODataV2}}Entity('EmpJob')"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Event Metadata for Absence Event Type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}getExtEventMetaDataDefinition?event=Absence",
									"host": [
										"{{APIServerURLODataV2}}getExtEventMetaDataDefinition"
									],
									"query": [
										{
											"key": "event",
											"value": "Absence"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Management",
					"item": [
						{
							"name": "Create an API User",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"status\": \"t\",\r\n                \"userId\": \"gr1234\",\r\n                \"username\": \"sfapigr1234\",\r\n                \"lastName\": \"Your last name\",\r\n                \"firstName\": \"Your first name\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}User",
									"host": [
										"{{APIServerURLODataV2}}User"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Email of API User",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"__metadata\": {\r\n                    \"uri\": \"{{APIServerURLODataV2}}odata/v2/User('gr1234')\",\r\n                    \"type\": \"SFOData.User\"\r\n                },\r\n                \"email\":\"youremail@bestrun.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}upsert",
									"host": [
										"{{APIServerURLODataV2}}upsert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read API User by Username",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User?$filter=username+eq+'sfapigr1234'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"query": [
										{
											"key": "$filter",
											"value": "username+eq+'sfapigr1234'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Count all active Users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User/$count?$filter=status+eq+'t'",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"path": [
										"$count"
									],
									"query": [
										{
											"key": "$filter",
											"value": "status+eq+'t'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Query all Users which are not normal internal active users (includes external ones as well as inactive ones)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User?$filter=status+ne+'t'&$format=JSON&$expand=personKeyNav&$select=status,userId,username,personKeyNav/personIdExternal,personKeyNav/perPersonUuid",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"query": [
										{
											"key": "$filter",
											"value": "status+ne+'t'"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$expand",
											"value": "personKeyNav"
										},
										{
											"key": "$select",
											"value": "status,userId,username,personKeyNav/personIdExternal,personKeyNav/perPersonUuid"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read User with Username",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User?$filter=username+eq+'{{EmployeeUserName}}'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"query": [
										{
											"key": "$filter",
											"value": "username+eq+'{{EmployeeUserName}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get default login language for a user account",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}UserAccount?$filter=username+eq+'{{EmployeeUserName}}'&$format=JSON&$select=defaultLocale,username",
									"host": [
										"{{APIServerURLODataV2}}UserAccount"
									],
									"query": [
										{
											"key": "$filter",
											"value": "username+eq+'{{EmployeeUserName}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$select",
											"value": "defaultLocale,username"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Attachments",
					"item": [
						{
							"name": "Create Attachment for Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"postman.setEnvironmentVariable(\"AttachmentID\", jsonData.d.attachmentId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"externalId\":\"1\",\r\n    \"fileName\":\"test1.txt\",\r\n    \"module\":\"GENERIC_OBJECT\",\r\n    \"userId\":\"{{EmployeeUserID}}\",\r\n    \"description\":\"test123\",\r\n    \"fileContent\":\"VGVzdDEyMw\",\r\n    \"viewable\":true,\r\n    \"deletable\":false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}Attachment?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Attachment"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get first Attachment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Attachment?$top=1",
									"host": [
										"{{APIServerURLODataV2}}Attachment"
									],
									"query": [
										{
											"key": "$top",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Attachment by UserId",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Attachment?$filter=userId+eq+'{{EmployeeUserID}}'",
									"host": [
										"{{APIServerURLODataV2}}Attachment"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Attachment by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Attachment({{AttachmentID}})?$top=1&$format={{APIFormatOData}}",
									"host": [
										"{{APIServerURLODataV2}}Attachment({{AttachmentID}})"
									],
									"query": [
										{
											"key": "$top",
											"value": "1"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Attachment by ID",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Attachment({{AttachmentID}})",
									"host": [
										"{{APIServerURLODataV2}}Attachment({{AttachmentID}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get DocumentType for Workpermit Attachment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"postman.setEnvironmentVariable(\"AttachmentDocumentType\", jsonData.d.results[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PicklistOption?$filter=parentPicklistOption/picklist/picklistId+eq+'ISOCountryList'+and+parentPicklistOption/externalCode+eq+'USA'+and+picklist/picklistId+eq+'permitdoctype'+and+externalCode+eq+'US1'&$expand=childPicklistOptions&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}PicklistOption"
									],
									"query": [
										{
											"key": "$filter",
											"value": "parentPicklistOption/picklist/picklistId+eq+'ISOCountryList'+and+parentPicklistOption/externalCode+eq+'USA'+and+picklist/picklistId+eq+'permitdoctype'+and+externalCode+eq+'US1'"
										},
										{
											"key": "$expand",
											"value": "childPicklistOptions"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Work Permit linking created Attachment",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"__metadata\": {\r\n        \"uri\": \"EmpWorkPermit\"\r\n    },\r\n    \"country\": \"232\",\r\n    \"documentType\": \"{{AttachmentDocumentType}}\",\r\n    \"documentNumber\": \"131231231\",\r\n    \"userId\": \"{{EmployeeUserID}}\",\r\n    \"isValidated\": false,\r\n    \"attachmentId\": \"{{AttachmentID}}\",\r\n    \"documentTitle\": \"Test\",\r\n    \"issueDate\": \"/Date(1660089600000)/\"\r\n\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}upsert",
									"host": [
										"{{APIServerURLODataV2}}upsert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read first 10 Work Permits of Employee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"externalId\":\"1\",\r\n    \"fileName\":\"test1.txt\",\r\n    \"module\":\"GENERIC_OBJECT\",\r\n    \"description\":\"test123\",\r\n    \"fileContent\":\"VGVzdDEyMw\",\r\n    \"viewable\":true,\r\n    \"deletable\":false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}EmpWorkPermit?$top=10&$format={{APIFormatOData}}&$filter=userId+eq+'{{EmployeeUserID}}'",
									"host": [
										"{{APIServerURLODataV2}}EmpWorkPermit"
									],
									"query": [
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										},
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Role Based Permissions",
					"item": [
						{
							"name": "Permission Checks",
							"item": [
								{
									"name": "generate SAML assertion for RBPLoginUserID (development only not to be used in production!)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"RBPLoginUserSAML\", responseBody);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{OAuthClientID}}",
													"type": "text"
												},
												{
													"key": "private_key",
													"value": "{{OAuthPrivateKey}}",
													"type": "text"
												},
												{
													"key": "user_id",
													"value": "{{RBPLoginUserID}}",
													"type": "text"
												},
												{
													"key": "token_url",
													"value": "{{OAuthTokenURL}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{APIServerURL}}/oauth/idp",
											"host": [
												"{{APIServerURL}}"
											],
											"path": [
												"oauth",
												"idp"
											]
										}
									},
									"response": []
								},
								{
									"name": "generate SAML assertion for APIUserName with full permission (development only not to be used in production!)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"SAMLAssertion\", responseBody);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "client_id",
													"value": "{{OAuthClientID}}",
													"type": "text"
												},
												{
													"key": "private_key",
													"value": "{{OAuthPrivateKey}}",
													"type": "text"
												},
												{
													"key": "user_id",
													"value": "{{APIUserID}}",
													"type": "text"
												},
												{
													"key": "token_url",
													"value": "{{OAuthTokenURL}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{APIServerURL}}/oauth/idp",
											"host": [
												"{{APIServerURL}}"
											],
											"path": [
												"oauth",
												"idp"
											]
										}
									},
									"response": []
								},
								{
									"name": "request access token for RBPLoginUserID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse( responseBody );\r",
													"postman.setEnvironmentVariable(\"RBPLoginUserAccessToken\", jsonData.access_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "company_id",
													"value": "{{CompanyID}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{OAuthClientID}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "urn:ietf:params:oauth:grant-type:saml2-bearer",
													"type": "text"
												},
												{
													"key": "assertion",
													"value": "{{RBPLoginUserSAML}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{APIServerURL}}/oauth/token",
											"host": [
												"{{APIServerURL}}"
											],
											"path": [
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "request access token for APIUserName",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse( responseBody );\r",
													"postman.setEnvironmentVariable(\"APIAccessToken\", jsonData.access_token);"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "company_id",
													"value": "{{CompanyID}}",
													"type": "text"
												},
												{
													"key": "client_id",
													"value": "{{OAuthClientID}}",
													"type": "text"
												},
												{
													"key": "grant_type",
													"value": "urn:ietf:params:oauth:grant-type:saml2-bearer",
													"type": "text"
												},
												{
													"key": "assertion",
													"value": "{{SAMLAssertion}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{APIServerURL}}/oauth/token",
											"host": [
												"{{APIServerURL}}"
											],
											"path": [
												"oauth",
												"token"
											]
										}
									},
									"response": []
								},
								{
									"name": "Generic Check if User RBPLoginUserID has permission with permission type RBPPermType and permission string value RBPPermValue to access User {{rbp_target_user}}",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}checkUserPermission?accessUserId='{{RBPLoginUserID}}'&permType='{{RBPPermType}}'&permStringValue='{{RBPPermValue}}'&targetUserId='{{RBPTargetUserID}}'&permLongValue=-1L&$format={{APIFormatOData}}",
											"host": [
												"{{APIServerURLODataV2}}checkUserPermission"
											],
											"query": [
												{
													"key": "accessUserId",
													"value": "'{{RBPLoginUserID}}'"
												},
												{
													"key": "permType",
													"value": "'{{RBPPermType}}'"
												},
												{
													"key": "permStringValue",
													"value": "'{{RBPPermValue}}'"
												},
												{
													"key": "targetUserId",
													"value": "'{{RBPTargetUserID}}'"
												},
												{
													"key": "permLongValue",
													"value": "-1L"
												},
												{
													"key": "$format",
													"value": "{{APIFormatOData}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Generic Check if User RBPLoginUserID has permission with permission type RBPPermType and permission string value RBPPermValue to access him or her self",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}checkUserPermission?accessUserId='{{RBPLoginUserID}}'&permType='{{RBPPermType}}'&permStringValue='{{RBPPermValue}}'&targetUserId='{{RBPLoginUserID}}'&permLongValue=-1L&$format={{APIFormatOData}}",
											"host": [
												"{{APIServerURLODataV2}}checkUserPermission"
											],
											"query": [
												{
													"key": "accessUserId",
													"value": "'{{RBPLoginUserID}}'"
												},
												{
													"key": "permType",
													"value": "'{{RBPPermType}}'"
												},
												{
													"key": "permStringValue",
													"value": "'{{RBPPermValue}}'"
												},
												{
													"key": "targetUserId",
													"value": "'{{RBPLoginUserID}}'"
												},
												{
													"key": "permLongValue",
													"value": "-1L"
												},
												{
													"key": "$format",
													"value": "{{APIFormatOData}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check if User RBPLoginUser has permission to read the first name of RBPTargetUser",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}checkUserPermission?accessUserId='{{RBPLoginUserID}}'&permType='DATA_MODEL'&permStringValue='$_firstName_read'&targetUserId='{{RBPTargetUserID}}'&permLongValue=-1L&$format={{APIFormatOData}}",
											"host": [
												"{{APIServerURLODataV2}}checkUserPermission"
											],
											"query": [
												{
													"key": "accessUserId",
													"value": "'{{RBPLoginUserID}}'"
												},
												{
													"key": "permType",
													"value": "'DATA_MODEL'"
												},
												{
													"key": "permStringValue",
													"value": "'$_firstName_read'"
												},
												{
													"key": "targetUserId",
													"value": "'{{RBPTargetUserID}}'"
												},
												{
													"key": "permLongValue",
													"value": "-1L"
												},
												{
													"key": "$format",
													"value": "{{APIFormatOData}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get all User Permissions of User {{rbp_login_user}}",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}getUsersPermissions?userIds='{{RBPLoginUserID}}'&locale=en-US&category='successline_user'",
											"host": [
												"{{APIServerURLODataV2}}getUsersPermissions"
											],
											"query": [
												{
													"key": "userIds",
													"value": "'{{RBPLoginUserID}}'"
												},
												{
													"key": "locale",
													"value": "en-US"
												},
												{
													"key": "category",
													"value": "'successline_user'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check if User RBPLoginUserID has permission to read the current salary of RBPTargetUserID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}checkUserPermission?accessUserId='{{RBPLoginUserID}}'&permType='DATA_MODEL'&permStringValue='$_compInfo_custom-double5_read'&targetUserId='{{RBPTargetUserID}}'&permLongValue=-1L&$format={{APIFormatOData}}",
											"host": [
												"{{APIServerURLODataV2}}checkUserPermission"
											],
											"query": [
												{
													"key": "accessUserId",
													"value": "'{{RBPLoginUserID}}'"
												},
												{
													"key": "permType",
													"value": "'DATA_MODEL'"
												},
												{
													"key": "permStringValue",
													"value": "'$_compInfo_custom-double5_read'"
												},
												{
													"key": "targetUserId",
													"value": "'{{RBPTargetUserID}}'"
												},
												{
													"key": "permLongValue",
													"value": "-1L"
												},
												{
													"key": "$format",
													"value": "{{APIFormatOData}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get total Salary of RBPLoginUserID accessing as RBPLoginUserID (data is returned)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{RBPLoginUserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}EmpCompensation?$filter=userId+eq+'{{RBPLoginUserID}}'&$format=JSON&$expand=empPayCompRecurringNav,empCompensationCalculatedNav,empCompensationGroupSumCalculatedNav",
											"host": [
												"{{APIServerURLODataV2}}EmpCompensation"
											],
											"query": [
												{
													"key": "$filter",
													"value": "userId+eq+'{{RBPLoginUserID}}'"
												},
												{
													"key": "$format",
													"value": "JSON"
												},
												{
													"key": "$expand",
													"value": "empPayCompRecurringNav,empCompensationCalculatedNav,empCompensationGroupSumCalculatedNav"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get total Salary of RBPTargetUserID accessing as RBPLoginUserID (no data returned due to RBP permission)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{RBPLoginUserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}EmpCompensation?$filter=userId+eq+'{{RBPTargetUserID}}'&$format=JSON&$expand=empPayCompRecurringNav,empCompensationCalculatedNav,empCompensationGroupSumCalculatedNav",
											"host": [
												"{{APIServerURLODataV2}}EmpCompensation"
											],
											"query": [
												{
													"key": "$filter",
													"value": "userId+eq+'{{RBPTargetUserID}}'"
												},
												{
													"key": "$format",
													"value": "JSON"
												},
												{
													"key": "$expand",
													"value": "empPayCompRecurringNav,empCompensationCalculatedNav,empCompensationGroupSumCalculatedNav"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get total Salary of RBPTargetUserID accessing as APIUserName (all data returned due to RBP permission)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{APIAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}EmpCompensation?$filter=userId+eq+'{{RBPTargetUserID}}'&$format=JSON&$expand=empPayCompRecurringNav,empCompensationCalculatedNav,empCompensationGroupSumCalculatedNav",
											"host": [
												"{{APIServerURLODataV2}}EmpCompensation"
											],
											"query": [
												{
													"key": "$filter",
													"value": "userId+eq+'{{RBPTargetUserID}}'"
												},
												{
													"key": "$format",
													"value": "JSON"
												},
												{
													"key": "$expand",
													"value": "empPayCompRecurringNav,empCompensationCalculatedNav,empCompensationGroupSumCalculatedNav"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get EmpJob all fields of RBPTargetUserID accessing as RBPLoginUserID (less fields visible due to RBP of user)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{RBPLoginUserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}EmpJob?$filter=userId+eq+'{{RBPTargetUserID}}'&$format=JSON",
											"host": [
												"{{APIServerURLODataV2}}EmpJob"
											],
											"query": [
												{
													"key": "$filter",
													"value": "userId+eq+'{{RBPTargetUserID}}'"
												},
												{
													"key": "$format",
													"value": "JSON"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get EmpJob all fields  RBPTargetUserID accessing as APIUserName (more fields visible due to RBP of user)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{APIAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}EmpJob?$filter=userId+eq+'{{RBPTargetUserID}}'&$format=JSON",
											"host": [
												"{{APIServerURLODataV2}}EmpJob"
											],
											"query": [
												{
													"key": "$filter",
													"value": "userId+eq+'{{RBPTargetUserID}}'"
												},
												{
													"key": "$format",
													"value": "JSON"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Batch multiple permission checks into one $batch request",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {
											"content-type": true
										}
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/mixed; boundary=batch_36522ad7-fc75-4b56-8c71-56071383e77b",
												"type": "default"
											},
											{
												"key": "host",
												"value": "apisalesdemo4.successfactors.com",
												"type": "default",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Type: application/http\r\nContent-Transfer-Encoding: binary\r\n\r\nGET checkUserPermission?accessUserId='{{RBPLoginUserID}}'&permType='DATA_MODEL'&permStringValue='$_firstName_read'&targetUserId='{{RBPTargetUserID}}'&permLongValue=-1L&$format=JSON HTTP/1.1\r\nContent-Type: application/json;type=entry\r\n\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Type: application/http\r\nContent-Transfer-Encoding: binary\r\n\r\nGET checkUserPermission?accessUserId='{{RBPLoginUserID}}'&permType='DATA_MODEL'&permStringValue='$_compInfo_custom-double5_read'&targetUserId='{{RBPTargetUserID}}'&permLongValue=-1L&$format=JSON HTTP/1.1\r\nContent-Type: application/json;type=entry\r\n\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b--"
										},
										"url": {
											"raw": "{{APIServerURLODataV2}}$batch",
											"host": [
												"{{APIServerURLODataV2}}$batch"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Permission Metadata and Checks",
							"item": [
								{
									"name": "Get RBP Permission Metadata including Permission Type and Permission UI texts in locale",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "{{APIUserPassword}}",
													"type": "string"
												},
												{
													"key": "username",
													"value": "{{APIUserName}}@{{CompanyID}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}getPermissionMetadata?locale=en-US",
											"host": [
												"{{APIServerURLODataV2}}getPermissionMetadata"
											],
											"query": [
												{
													"key": "locale",
													"value": "en-US"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GetMetadata for Permission Entities",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}RBPRole,RBPRule,RBPBasicPermission/$metadata",
											"host": [
												"{{APIServerURLODataV2}}RBPRole,RBPRule,RBPBasicPermission"
											],
											"path": [
												"$metadata"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Permission Groups",
							"item": [
								{
									"name": "Get Metadata",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse( responseBody );\r",
													"\r",
													"postman.setEnvironmentVariable(\"RBPStaticGroup\", jsonData.d.results[0].groupID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}DynamicGroup?$top=20&$format=JSON&$filter=staticGroup+eq+true",
											"host": [
												"{{APIServerURLODataV2}}DynamicGroup"
											],
											"query": [
												{
													"key": "$top",
													"value": "20"
												},
												{
													"key": "$format",
													"value": "JSON"
												},
												{
													"key": "$filter",
													"value": "staticGroup+eq+true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Read All Static Groups",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse( responseBody );\r",
													"\r",
													"postman.setEnvironmentVariable(\"RBPStaticGroup\", jsonData.d.results[0].groupID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}DynamicGroup?$top=20&$format=JSON&$filter=staticGroup+eq+true",
											"host": [
												"{{APIServerURLODataV2}}DynamicGroup"
											],
											"query": [
												{
													"key": "$top",
													"value": "20"
												},
												{
													"key": "$format",
													"value": "JSON"
												},
												{
													"key": "$filter",
													"value": "staticGroup+eq+true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove user by UserId from a static group",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}updateStaticGroup?groupId={{RBPStaticGroup}}L&action='remove'&userIds='{{EmployeeUserID}}'",
											"host": [
												"{{APIServerURLODataV2}}updateStaticGroup"
											],
											"query": [
												{
													"key": "groupId",
													"value": "{{RBPStaticGroup}}L"
												},
												{
													"key": "action",
													"value": "'remove'"
												},
												{
													"key": "userIds",
													"value": "'{{EmployeeUserID}}'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Add user by UserId from a static group Copy",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}updateStaticGroup?groupId={{RBPStaticGroup}}L&action='add'&userIds='{{EmployeeUserID}}'",
											"host": [
												"{{APIServerURLODataV2}}updateStaticGroup"
											],
											"query": [
												{
													"key": "groupId",
													"value": "{{RBPStaticGroup}}L"
												},
												{
													"key": "action",
													"value": "'add'"
												},
												{
													"key": "userIds",
													"value": "'{{EmployeeUserID}}'"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Read first 20 Dynamic Groups",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse( responseBody );\r",
													"\r",
													"postman.setEnvironmentVariable(\"RBPDynamicGroup\", jsonData.d.results[0].groupID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}DynamicGroup?$top=20&$format=JSON&$filter=staticGroup+eq+false",
											"host": [
												"{{APIServerURLODataV2}}DynamicGroup"
											],
											"query": [
												{
													"key": "$top",
													"value": "20"
												},
												{
													"key": "$format",
													"value": "JSON"
												},
												{
													"key": "$filter",
													"value": "staticGroup+eq+false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Dynamic Group by Name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse( responseBody );\r",
													"\r",
													"postman.setEnvironmentVariable(\"RBPDynamicGroupID\", jsonData.d.results[0].groupID);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}DynamicGroup?$filter=groupName+eq+'{{RBPDynamicGroupName}}'&$format=JSON",
											"host": [
												"{{APIServerURLODataV2}}DynamicGroup"
											],
											"query": [
												{
													"key": "$filter",
													"value": "groupName+eq+'{{RBPDynamicGroupName}}'"
												},
												{
													"key": "$format",
													"value": "JSON"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User of Dynamic Group by ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}getUsersByDynamicGroup?groupId={{RBPDynamicGroupID}}L&activeOnly=false",
											"host": [
												"{{APIServerURLODataV2}}getUsersByDynamicGroup"
											],
											"query": [
												{
													"key": "groupId",
													"value": "{{RBPDynamicGroupID}}L"
												},
												{
													"key": "activeOnly",
													"value": "false"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Read Dynamic Group with all expanded entities by ID",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{APIServerURLODataV2}}getExpandedDynamicGroupById?groupId={{RBPDynamicGroupID}}L",
											"host": [
												"{{APIServerURLODataV2}}getExpandedDynamicGroupById"
											],
											"query": [
												{
													"key": "groupId",
													"value": "{{RBPDynamicGroupID}}L"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Alerts, Todos and Notifications",
					"item": [
						{
							"name": "Get Available Alerts (configuration not instances)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}AlertMessage?$format=JSON&$expand=effectiveStatusNav",
									"host": [
										"{{APIServerURLODataV2}}AlertMessage"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$expand",
											"value": "effectiveStatusNav"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Todos of Login User (API User aka User related to SAML Assertion/Token)",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Todo",
									"host": [
										"{{APIServerURLODataV2}}Todo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Todos of Employee",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}TodoEntryV2?$filter=userId+eq+'{{EmployeeUserID}}'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}TodoEntryV2"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Todos with Category 41",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}TodoEntryV2?$filter=categoryId+eq+'41'&$format=atom&$select=subjectId,userId,createdDate,todoEntryId",
									"host": [
										"{{APIServerURLODataV2}}TodoEntryV2"
									],
									"query": [
										{
											"key": "$filter",
											"value": "categoryId+eq+'41'"
										},
										{
											"key": "$format",
											"value": "atom"
										},
										{
											"key": "$select",
											"value": "subjectId,userId,createdDate,todoEntryId"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Todo Entry",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"dueDate\": \"/Date(1651550400000+0000)/\",\r\n                \"todoEntryName\": \"Alice O'Connor (AOConnor)\",               \r\n                \"subjectId\": \"AOConnor\",\r\n                \"linkUrl\": \"https://sap.com\",\r\n                \"categoryId\": \"41\",\r\n                \"status\": 2,\r\n                \"userNav\": {\r\n                    \"__metadata\": \r\n        \t        {\r\n                    \"uri\": \"https://{{APIServerURLODataV2}}User('{{EmployeeUserID}}')\",\r\n                    \"type\": \"SFOData.User\"\r\n        \t    }\r\n        \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}TodoEntryV2",
									"host": [
										"{{APIServerURLODataV2}}TodoEntryV2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Picklists",
					"item": [
						{
							"name": "Metadata for Picklist Entities",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PicklistOption,Picklist,PicklistLabel/$metadata",
									"host": [
										"{{APIServerURLODataV2}}PicklistOption,Picklist,PicklistLabel"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Picklist Options for Document Types",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Picklist?$filter=picklistId+eq+'permitdoctype'&$expand=picklistOptions,picklistOptions/picklistLabels,picklistOptions/parentPicklistOption,picklistOptions/parentPicklistOption/parentPicklistOption&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Picklist"
									],
									"query": [
										{
											"key": "$filter",
											"value": "picklistId+eq+'permitdoctype'"
										},
										{
											"key": "$expand",
											"value": "picklistOptions,picklistOptions/picklistLabels,picklistOptions/parentPicklistOption,picklistOptions/parentPicklistOption/parentPicklistOption"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Picklist Options for a picklist in a given landuage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PicklistLabel?$filter=picklistOption/picklist/picklistId+eq+'employee-status'+and+locale+eq+'en_US'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}PicklistLabel"
									],
									"query": [
										{
											"key": "$filter",
											"value": "picklistOption/picklist/picklistId+eq+'employee-status'+and+locale+eq+'en_US'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Document Types for Country US (Parent Picklist)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PicklistOption?$filter=parentPicklistOption/picklist/picklistId+eq+'ISOCountryList'+and+parentPicklistOption/externalCode+eq+'USA'+and+picklist/picklistId+eq+'permitdoctype'&$expand=childPicklistOptions&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}PicklistOption"
									],
									"query": [
										{
											"key": "$filter",
											"value": "parentPicklistOption/picklist/picklistId+eq+'ISOCountryList'+and+parentPicklistOption/externalCode+eq+'USA'+and+picklist/picklistId+eq+'permitdoctype'"
										},
										{
											"key": "$expand",
											"value": "childPicklistOptions"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Picklist Label in specific language",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PicklistLabel?$filter=optionId+eq+'17789'+and+locale+eq+'en_US'",
									"host": [
										"{{APIServerURLODataV2}}PicklistLabel"
									],
									"query": [
										{
											"key": "$filter",
											"value": "optionId+eq+'17789'+and+locale+eq+'en_US'"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Job Profile Builder",
					"item": [
						{
							"name": "Get Metadata for JobFamily,JobRole",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}FamilyEntity,RoleEntity/$metadata",
									"host": [
										"{{APIServerURLODataV2}}FamilyEntity,RoleEntity"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new Job Family",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"keyString=jsonData.d[0].key;\r",
											"postman.setEnvironmentVariable(\"JobProfileFamily\", keyString.split('externalCode=')[1]);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"__metadata\": {\r\n\"uri\": \"FamilyEntity\",\r\n\"type\": \"SFOData.FamilyEntity\"\r\n},\r\n\"name_de_DE\": \"Software Entwicklung\",\r\n\"name_en_US\": \"Software Engineering\",\r\n\"name_en_GB\": \"Software Engineering\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}upsert?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}upsert"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Family",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"__metadata\": {\r\n\"uri\": \"FamilyEntity\",\r\n\"type\": \"SFOData.FamilyEntity\"\r\n},\r\n\"name_en_US\": \"test1312\",\r\n\"name_en_GB\": \"test131312\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}FamilyEntity?$format=JSON&$filter=externalCode+eq+'{{JobProfileFamily}}'",
									"host": [
										"{{APIServerURLODataV2}}FamilyEntity"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$filter",
											"value": "externalCode+eq+'{{JobProfileFamily}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Job Family",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"__metadata\": {\r\n\"uri\": \"FamilyEntity\",\r\n\"type\": \"SFOData.FamilyEntity\"\r\n},\r\n\"name_en_US\": \"test1312\",\r\n\"name_en_GB\": \"test131312\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}FamilyEntity(externalCode='{{JobProfileFamily}}')",
									"host": [
										"{{APIServerURLODataV2}}FamilyEntity(externalCode='{{JobProfileFamily}}')"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new Job Role linked to Family",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"keyString=jsonData.d[0].key;\r",
											"postman.setEnvironmentVariable(\"JobProfileRole\", keyString.split('externalCode=')[1]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"__metadata\": {\r\n\"uri\": \"RoleEntity\",\r\n\"type\": \"SFOData.RoleEntity\"\r\n},\r\n\"family\": \"{{JobProfileFamily}}\",\r\n\"name_en_US\": \"Security Architect\",\r\n\"name_en_GB\": \"Security Architect\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}upsert?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}upsert"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Job Roles of a Job Family",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"__metadata\": {\r\n\"uri\": \"FamilyEntity\",\r\n\"type\": \"SFOData.FamilyEntity\"\r\n},\r\n\"name_en_US\": \"test1312\",\r\n\"name_en_GB\": \"test131312\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}RoleEntity?$format=JSON&$filter=family+eq+'{{JobProfileFamily}}'",
									"host": [
										"{{APIServerURLODataV2}}RoleEntity"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$filter",
											"value": "family+eq+'{{JobProfileFamily}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Job Role",
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"__metadata\": {\r\n\"uri\": \"FamilyEntity\",\r\n\"type\": \"SFOData.FamilyEntity\"\r\n},\r\n\"name_en_US\": \"test1312\",\r\n\"name_en_GB\": \"test131312\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}RoleEntity(externalCode='{{JobProfileRole}}')",
									"host": [
										"{{APIServerURLODataV2}}RoleEntity(externalCode='{{JobProfileRole}}')"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Photo",
					"item": [
						{
							"name": "Get Photo metadata",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Photo,User/$metadata",
									"host": [
										"{{APIServerURLODataV2}}Photo,User"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get original photo type of an employee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Photo?$filter=userId+eq+'{{EmployeeUserID}}'+and+photoType+eq+'1'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Photo"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'+and+photoType+eq+'1'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all photo types of an employee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Photo?$filter=userId+eq+'{{EmployeeUserID}}'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Photo"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Theming",
					"item": [
						{
							"name": "Metadata Theming Entities",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}ThemeInfo,ThemeConfig,ThemeTemplate/$metadata",
									"host": [
										"{{APIServerURLODataV2}}ThemeInfo,ThemeConfig,ThemeTemplate"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SuccessFactors Theming Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"ThemingID\", jsonData.d.results[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}ThemeInfo?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}ThemeInfo"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SuccessFactors Theming Config",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}ThemeConfig('{{ThemingID}}')?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}ThemeConfig('{{ThemingID}}')"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SuccessFactors Theming Template Homepage",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}ThemeTemplate?moduleId=HOME&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}ThemeTemplate"
									],
									"query": [
										{
											"key": "moduleId",
											"value": "HOME"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get SuccessFactors Theming Template Admin with additional parameters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}ThemeTemplate?moduleId=ADMIN&$format=JSON&breakdown=true&useAbsPaths=true",
									"host": [
										"{{APIServerURLODataV2}}ThemeTemplate"
									],
									"query": [
										{
											"key": "moduleId",
											"value": "ADMIN"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "breakdown",
											"value": "true"
										},
										{
											"key": "useAbsPaths",
											"value": "true"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "SAP SuccessFactors Employee Central",
			"item": [
				{
					"name": "ReportingLine",
					"item": [
						{
							"name": "Get the number of direct reports of a manager",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User?$filter=userId+eq+'{{ManagerUserID}}'&$select=totalTeamSize,teamMembersSize",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{ManagerUserID}}'"
										},
										{
											"key": "$select",
											"value": "totalTeamSize,teamMembersSize"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Employment Information (not ready yet)",
					"item": [
						{
							"name": "Get the Job Information History of an Employee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmpJob?$filter=userId+eq+'{{EmployeeUserID}}'&fromDate=1900-01-01&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}EmpJob"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										},
										{
											"key": "fromDate",
											"value": "1900-01-01"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the Job Information record from the history of an Employee as of today",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmpJob?$filter=userId+eq+'{{EmployeeUserID}}'&$select=userId,seqNumber,startDate,endDate,position,location,department,fte",
									"host": [
										"{{APIServerURLODataV2}}EmpJob"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										},
										{
											"key": "$select",
											"value": "userId,seqNumber,startDate,endDate,position,location,department,fte"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the Job Information record from the history of an Employee as of today Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmpJob?$filter=userId+eq+'{{EmployeeUserID}}'&$select=userId,seqNumber,startDate,endDate,position,location,department,fte&asOfDate=2019-01-01",
									"host": [
										"{{APIServerURLODataV2}}EmpJob"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										},
										{
											"key": "$select",
											"value": "userId,seqNumber,startDate,endDate,position,location,department,fte"
										},
										{
											"key": "asOfDate",
											"value": "2019-01-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find an employee with an Global Assignment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"EmployeeWithGlobalAssignementPersonIDExternal\", jsonData.d.results[0].personIdExternal);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmpEmployment?$filter=assignmentClass+eq+'GA'&$top=1&$select=personIdExternal,userId&$format=json",
									"host": [
										"{{APIServerURLODataV2}}EmpEmployment"
									],
									"query": [
										{
											"key": "$expand",
											"value": "employmentNav",
											"disabled": true
										},
										{
											"key": "$select",
											"value": "userId,startDate,lastModifiedDateTime,employmentNav/lastModifiedDateTime",
											"disabled": true
										},
										{
											"key": "fromDate",
											"value": "01-01-1900",
											"disabled": true
										},
										{
											"key": "$filter",
											"value": "assignmentClass+eq+'GA'"
										},
										{
											"key": "$top",
											"value": "1"
										},
										{
											"key": "$select",
											"value": "personIdExternal,userId"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Employments of an Employee with multiple Employment including Job Information",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmpEmployment?$filter=personIdExternal+eq+'{{EmployeeWithGlobalAssignementPersonIDExternal}}'&$expand=jobInfoNav&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}EmpEmployment"
									],
									"query": [
										{
											"key": "$filter",
											"value": "personIdExternal+eq+'{{EmployeeWithGlobalAssignementPersonIDExternal}}'"
										},
										{
											"key": "$expand",
											"value": "jobInfoNav"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the termination information of an terminated employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"TerminatedEmployeePersonIDExternal\", jsonData.d.results[0].personIdExternal);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmpEmploymentTermination?$top=1&$expand=jobInfoNav,jobInfoNav/eventReasonNav&$format=json",
									"host": [
										"{{APIServerURLODataV2}}EmpEmploymentTermination"
									],
									"query": [
										{
											"key": "$top",
											"value": "1"
										},
										{
											"key": "$expand",
											"value": "jobInfoNav,jobInfoNav/eventReasonNav"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Employment Status value from Picklist",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Picklist?$filter=picklistId+eq+'employee-status'&$expand=picklistOptions,picklistOptions/picklistLabels,picklistOptions/parentPicklistOption,picklistOptions/parentPicklistOption/parentPicklistOption&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Picklist"
									],
									"query": [
										{
											"key": "$filter",
											"value": "picklistId+eq+'employee-status'"
										},
										{
											"key": "$expand",
											"value": "picklistOptions,picklistOptions/picklistLabels,picklistOptions/parentPicklistOption,picklistOptions/parentPicklistOption/parentPicklistOption"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Position Management",
					"item": [
						{
							"name": "Get metadata of Position Entity",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Position/$metadata",
									"host": [
										"{{APIServerURLODataV2}}Position"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Existing Position",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Position(code='{{PositionExternalCode}}',effectiveStartDate=datetime'{{PositionStartDate}}')?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Position(code='{{PositionExternalCode}}',effectiveStartDate=datetime'{{PositionStartDate}}')"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new Position",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true,
									"accept": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"__metadata\": {\r\n        \"uri\": \"Position\"\r\n    },\r\n    \"code\": \"{{PositionNewCode}}\",\r\n    \"effectiveStartDate\": \"/Date(1574245948000)/\",\r\n    \"positionTitle\":\"HR Administrator\",\r\n    \"effectiveStatus\":\"A\"\r\n}"
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}Position",
									"host": [
										"{{APIServerURLODataV2}}Position"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Position using POST and x-http-method",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									},
									{
										"key": "x-http-method",
										"value": "MERGE",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"comment\": \"Updating position location\",\r\n    \"location\": \"1710-2009\"\r\n}"
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}Position(code='{{PositionNewCode}}',effectiveStartDate=datetime'{{PositionNewStartDate}}')?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Position(code='{{PositionNewCode}}',effectiveStartDate=datetime'{{PositionNewStartDate}}')"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Position using upsert (preferred)",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"__metadata\": {\r\n            \"uri\": \"Position\"\r\n    },\r\n    \"code\": \"{{PositionNewCode}}\",\r\n    \"effectiveStartDate\": \"/Date(1574245948000)/\",\r\n    \"comment\": \"Updating position location\",\r\n    \"location\": \"1710-2009\"\r\n}"
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}upsert",
									"host": [
										"{{APIServerURLODataV2}}upsert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Created Position",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Position(code='{{PositionNewCode}}',effectiveStartDate=datetime'{{PositionNewStartDate}}')?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Position(code='{{PositionNewCode}}',effectiveStartDate=datetime'{{PositionNewStartDate}}')"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Position",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Position(code='{{PositionNewCode}}',effectiveStartDate=datetime'{{PositionNewStartDate}}')",
									"host": [
										"{{APIServerURLODataV2}}Position(code='{{PositionNewCode}}',effectiveStartDate=datetime'{{PositionNewStartDate}}')"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Compound Employee SOAP API",
					"item": [
						{
							"name": "Trigger a change by updating the middlename of an employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// https://momentjs.com/docs\r",
											"const moment = require(\"moment\");\r",
											"\r",
											"var oneHourAgoInUTC  = moment().utc().subtract(1,\"hour\").format();\r",
											"var Local = moment().format();\r",
											"console.log(\"oneHourAgoInUTC:\",oneHourAgoInUTC);\r",
											"console.log(\"Local:\",Local);\r",
											"\r",
											"postman.setEnvironmentVariable(\"DateTimeNow\",oneHourAgoInUTC );\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{APIAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"__metadata\": {\r\n        \"uri\": \"https://apisalesdemo4.successfactors.com:443/odata/v2/PerPersonal(personIdExternal='{{EmployeeUserID}}',startDate=datetime'2017-01-01T00:00:00')\",\r\n        \"type\": \"SFOData.PerPersonal\"\r\n    },\r\n    \"middleName\": \"Marc3\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}upsert",
									"host": [
										"{{APIServerURLODataV2}}upsert"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP UI Login using Bearer Token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = xml2Json( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"APISessionIdSOAP\", JSON.sessionId);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{APIAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/soap+xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:urn=\"urn:sfobject.sfapi.successfactors.com\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <urn:login>\r\n         <urn:credential>\r\n            <urn:companyId></urn:companyId>\r\n            <urn:username></urn:username>\r\n            <urn:password></urn:password>\r\n         </urn:credential>\r\n      </urn:login>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLSOAP}}",
									"host": [
										"{{APIServerURLSOAP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP UI Query CE API full data with global assignment",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/soap+xml",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "JSESSIONID={{APISessionIdSOAP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:urn=\"urn:sfobject.sfapi.successfactors.com\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <urn:query>\r\n         <urn:queryString>\r\n            select person\r\n\t\t\t\t ,personal_information\r\n\t\t\t\t ,address_information\r\n\t\t\t\t ,employment_information \r\n\t\t\t\t ,job_information\r\n\t\t\t\t ,compensation_information\r\n\t\t\t\t ,paycompensation_recurring\r\n\t\t\t\t ,paycompensation_non_recurring \r\n\t\t\t\t ,national_id_card\t\t\t\t \r\n\t\t\t\t ,email_information \r\n\t\t\t\t ,phone_information\r\n\t\t\t\t ,person_relation \r\n\t\t\t\t ,job_relation\r\n\t\t\t\t ,global_assignment_information \r\n\t\t\tfrom\tCompoundEmployee\r\n\t\t\twhere\t\tperson_id_external = '{{EmployeeWithGlobalAssignementPersonIDExternal}}'\r\n         </urn:queryString>\r\n    \r\n         <urn:param>\r\n            <urn:name>maxRows</urn:name>\r\n            <urn:value>800</urn:value>\r\n         </urn:param>\r\n      </urn:query>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLSOAP}}",
									"host": [
										"{{APIServerURLSOAP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP UI Query CE API full data with concurrent employment",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/soap+xml",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "JSESSIONID={{APISessionIdSOAP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:urn=\"urn:sfobject.sfapi.successfactors.com\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <urn:query>\r\n         <urn:queryString>\r\n            select person\r\n\t\t\t\t ,personal_information\r\n\t\t\t\t ,address_information\r\n\t\t\t\t ,employment_information \r\n\t\t\t\t ,job_information\r\n\t\t\t\t ,compensation_information\r\n\t\t\t\t ,paycompensation_recurring\r\n\t\t\t\t ,paycompensation_non_recurring \r\n\t\t\t\t ,national_id_card\t\t\t\t \r\n\t\t\t\t ,email_information \r\n\t\t\t\t ,phone_information\r\n\t\t\t\t ,person_relation \r\n\t\t\t\t ,job_relation\r\n\t\t\t\t ,SecondaryAssignments \r\n\t\t\tfrom\tCompoundEmployee\r\n\t\t\twhere\t\tperson_id_external = '{{EmployeeWithConcurrentEmploymentPersonIDExternal}}'\r\n         </urn:queryString>\r\n    \r\n         <urn:param>\r\n            <urn:name>maxRows</urn:name>\r\n            <urn:value>800</urn:value>\r\n         </urn:param>\r\n      </urn:query>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLSOAP}}",
									"host": [
										"{{APIServerURLSOAP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP UI Query CE API full data load",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/soap+xml",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "JSESSIONID={{APISessionIdSOAP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:urn=\"urn:sfobject.sfapi.successfactors.com\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <urn:query>\r\n         <urn:queryString>\r\n            select person\r\n\t\t\t\t ,personal_information\r\n\t\t\t\t ,address_information\r\n\t\t\t\t ,employment_information \r\n\t\t\t\t ,job_information\r\n\t\t\t\t ,compensation_information\r\n\t\t\t\t ,paycompensation_recurring\r\n\t\t\t\t ,paycompensation_non_recurring \r\n\t\t\t\t ,national_id_card\t\t\t\t \r\n\t\t\t\t ,email_information \r\n\t\t\t\t ,phone_information\r\n\t\t\t\t ,person_relation \r\n\t\t\t\t ,job_relation\r\n\t\t\tfrom\tCompoundEmployee\r\n\t\t\twhere\t\t person_id_external = '{{EmployeePersonIDExternal}}' \r\n         </urn:queryString>\r\n    \r\n         <urn:param>\r\n            <urn:name>maxRows</urn:name>\r\n            <urn:value>800</urn:value>\r\n         </urn:param>\r\n      </urn:query>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLSOAP}}",
									"host": [
										"{{APIServerURLSOAP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP UI Query CE API delta load (trigger change using first request in collection first to set selection date corretly)",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/soap+xml",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "JSESSIONID={{bizxJDSessionId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:urn=\"urn:sfobject.sfapi.successfactors.com\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <urn:query>\r\n         <urn:queryString>\r\n            select person\r\n\t\t\t\t ,personal_information\r\n\t\t\t\t ,address_information\r\n\t\t\t\t ,employment_information \r\n\t\t\t\t ,job_information\r\n\t\t\t\t ,compensation_information\r\n\t\t\t\t ,paycompensation_recurring\r\n\t\t\t\t ,paycompensation_non_recurring \r\n\t\t\t\t ,national_id_card\t\t\t\t \r\n\t\t\t\t ,email_information \r\n\t\t\t\t ,phone_information\r\n\t\t\t\t ,person_relation \r\n\t\t\t\t ,job_relation\r\n\t\t\t\t ,global_assignment_information \r\n\t\t\tfrom\tCompoundEmployee\r\n\t\t\twhere\t\tlast_modified_on > to_datetime('{{DateTimeNow}}') \r\n\r\n         </urn:queryString>\r\n         <urn:param>\r\n            <urn:name>maxRows</urn:name>\r\n            <urn:value>8</urn:value>\r\n         </urn:param>\r\n      </urn:query>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLSOAP}}",
									"host": [
										"{{APIServerURLSOAP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP UI Query CE API field level delta mode",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/soap+xml",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "JSESSIONID={{APISessionIdSOAP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:urn=\"urn:sfobject.sfapi.successfactors.com\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <urn:query>\r\n         <urn:queryString>\r\n            select person\r\n\t\t\t\t ,personal_information\r\n\t\t\t\t ,address_information\r\n\t\t\t\t ,employment_information \r\n\t\t\t\t ,job_information\r\n\t\t\t\t ,compensation_information\r\n\t\t\t\t ,paycompensation_recurring\r\n\t\t\t\t ,paycompensation_non_recurring \r\n\t\t\t\t ,national_id_card\t\t\t\t \r\n\t\t\t\t ,email_information \r\n\t\t\t\t ,phone_information\r\n\t\t\t\t ,person_relation \r\n\t\t\t\t ,job_relation\r\n\t\t\t\t ,global_assignment_information \r\n\t\t\tfrom\tCompoundEmployee\r\n\t\t\twhere\t\tlast_modified_on > to_datetime('{{DateTimeNow}}') \r\n\r\n         </urn:queryString>\r\n          <urn:param>\r\n            <urn:name>queryMode</urn:name>\r\n            <urn:value>delta</urn:value>\r\n         </urn:param>\r\n         <urn:param>\r\n            <urn:name>resultOptions</urn:name>\r\n            <urn:value>changedSegmentsOnly</urn:value>\r\n         </urn:param> \r\n         <urn:param>\r\n            <urn:name>maxRows</urn:name>\r\n            <urn:value>8</urn:value>\r\n         </urn:param>\r\n      </urn:query>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLSOAP}}",
									"host": [
										"{{APIServerURLSOAP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP UI Query CE API snapshot mode",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/soap+xml",
										"type": "text"
									},
									{
										"key": "Cookie",
										"value": "JSESSIONID={{APISessionIdSOAP}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:urn=\"urn:sfobject.sfapi.successfactors.com\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <urn:query>\r\n         <urn:queryString>\r\n            select person\r\n\t\t\t\t ,personal_information\r\n\t\t\t\t ,address_information\r\n\t\t\t\t ,employment_information \r\n\t\t\t\t ,job_information\r\n\t\t\t\t ,compensation_information\r\n\t\t\t\t ,paycompensation_recurring\r\n\t\t\t\t ,paycompensation_non_recurring \r\n\t\t\t\t ,national_id_card\t\t\t\t \r\n\t\t\t\t ,email_information \r\n\t\t\t\t ,phone_information\r\n\t\t\t\t ,person_relation \r\n\t\t\t\t ,job_relation\r\n\t\t\t\t ,global_assignment_information \r\n\t\t\tfrom\tCompoundEmployee\r\n\t\t\twhere\t\tlast_modified_on > to_datetime('{{DateTimeNow}}') \r\n\r\n         </urn:queryString>\r\n          <urn:param>\r\n            <urn:name>queryMode</urn:name>\r\n            <urn:value>delta</urn:value>\r\n         </urn:param>\r\n         <urn:param>\r\n            <urn:name>resultOptions</urn:name>\r\n            <urn:value>changedSegmentsOnly</urn:value>\r\n         </urn:param> \r\n         <urn:param>\r\n            <urn:name>maxRows</urn:name>\r\n            <urn:value>8</urn:value>\r\n         </urn:param>\r\n      </urn:query>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLSOAP}}",
									"host": [
										"{{APIServerURLSOAP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SOAP UI Logout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = xml2Json( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"APISessionIdSOAP\", JSON.sessionId);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{APIAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/soap+xml"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:urn=\"urn:sfobject.sfapi.successfactors.com\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <urn:logout/>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
									"options": {
										"raw": {
											"language": "xml"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLSOAP}}",
									"host": [
										"{{APIServerURLSOAP}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Building a similar API like Compound Employee in OData - Full Load  (this has limits with respect to performance!)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{APIAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PerPerson?$filter=personIdExternal+eq+'{{EmployeePersonIDExternal}}'&$select=dateOfBirth,countryOfBirth,personId,employmentNav/originalStartDate,employmentNav/jobInfoNav/department,employmentNav/jobInfoNav/jobCode,employmentNav/jobInfoNav/startDate,employmentNav/jobInfoNav/seqNumber,personalInfoNav/firstName,personalInfoNav/lastName,personalInfoNav/middleName&$expand=personalInfoNav,employmentNav,employmentNav/jobInfoNav&customPageSize=800&paging=snapshot&$format={{APIFormatOData}}&fromDate=1900-01-01",
									"host": [
										"{{APIServerURLODataV2}}PerPerson"
									],
									"query": [
										{
											"key": "$filter",
											"value": "personIdExternal+eq+'{{EmployeePersonIDExternal}}'"
										},
										{
											"key": "$select",
											"value": "dateOfBirth,countryOfBirth,personId,employmentNav/originalStartDate,employmentNav/jobInfoNav/department,employmentNav/jobInfoNav/jobCode,employmentNav/jobInfoNav/startDate,employmentNav/jobInfoNav/seqNumber,personalInfoNav/firstName,personalInfoNav/lastName,personalInfoNav/middleName"
										},
										{
											"key": "$expand",
											"value": "personalInfoNav,employmentNav,employmentNav/jobInfoNav"
										},
										{
											"key": "customPageSize",
											"value": "800"
										},
										{
											"key": "paging",
											"value": "snapshot"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										},
										{
											"key": "fromDate",
											"value": "1900-01-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Building a similar API like Compound Employee in OData - Delta Load  (this has limits with respect to performance!) Copy",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{APIAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PerPerson?$filter=lastModifiedDateTime+gt+datetimeoffset'{{DateTimeNow}}'+or+personalInfoNav/lastModifiedDateTime+gt+datetimeoffset'{{DateTimeNow}}'+or+employmentNav/lastModifiedDateTime+gt+datetimeoffset'{{DateTimeNow}}'+or+employmentNav/jobInfoNav/lastModifiedDateTime+gt+datetimeoffset'{{DateTimeNow}}'&$select=dateOfBirth,countryOfBirth,lastModifiedDateTime,personId,employmentNav/lastModifiedDateTime,employmentNav/originalStartDate,employmentNav/jobInfoNav/department,employmentNav/jobInfoNav/jobCode,employmentNav/jobInfoNav/startDate,employmentNav/jobInfoNav/seqNumber,employmentNav/jobInfoNav/lastModifiedDateTime,personalInfoNav/firstName,personalInfoNav/lastName,personalInfoNav/middleName,personalInfoNav/lastModifiedDateTime&$expand=personalInfoNav,employmentNav,employmentNav/jobInfoNav&customPageSize=800&paging=snapshot&$format={{APIFormatOData}}&fromDate=1900-01-01",
									"host": [
										"{{APIServerURLODataV2}}PerPerson"
									],
									"query": [
										{
											"key": "$filter",
											"value": "lastModifiedDateTime+gt+datetimeoffset'{{DateTimeNow}}'+or+personalInfoNav/lastModifiedDateTime+gt+datetimeoffset'{{DateTimeNow}}'+or+employmentNav/lastModifiedDateTime+gt+datetimeoffset'{{DateTimeNow}}'+or+employmentNav/jobInfoNav/lastModifiedDateTime+gt+datetimeoffset'{{DateTimeNow}}'"
										},
										{
											"key": "$select",
											"value": "dateOfBirth,countryOfBirth,lastModifiedDateTime,personId,employmentNav/lastModifiedDateTime,employmentNav/originalStartDate,employmentNav/jobInfoNav/department,employmentNav/jobInfoNav/jobCode,employmentNav/jobInfoNav/startDate,employmentNav/jobInfoNav/seqNumber,employmentNav/jobInfoNav/lastModifiedDateTime,personalInfoNav/firstName,personalInfoNav/lastName,personalInfoNav/middleName,personalInfoNav/lastModifiedDateTime"
										},
										{
											"key": "$expand",
											"value": "personalInfoNav,employmentNav,employmentNav/jobInfoNav"
										},
										{
											"key": "customPageSize",
											"value": "800"
										},
										{
											"key": "paging",
											"value": "snapshot"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										},
										{
											"key": "fromDate",
											"value": "1900-01-01"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "noauth"
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Person Information",
					"item": [
						{
							"name": "Get Biographical Data from an active employee",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PerPerson?$filter=personIdExternal+eq+'{{EmployeePersonIDExternal}}'&$format={{APIFormatOData}}",
									"host": [
										"{{APIServerURLODataV2}}PerPerson"
									],
									"query": [
										{
											"key": "$filter",
											"value": "personIdExternal+eq+'{{EmployeePersonIDExternal}}'"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Biographical and Personal Data of a inactive employee (terminated)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PerPerson?$filter=personIdExternal+eq+'{{TerminatedEmployeePersonIDExternal}}'&$format=ATOM&fromDate=1900-01-01&$expand=personalInfoNav,employmentNav,employmentNav/jobInfoNav,employmentNav/jobInfoNav/emplStatusNav,employmentNav/jobInfoNav/eventNav&$select=personId,personIdExternal,personalInfoNav/firstName,personalInfoNav/lastName,employmentNav/startDate,employmentNav/seniorityDate,employmentNav/originalStartDate,employmentNav/jobInfoNav/seqNumber,employmentNav/jobInfoNav/userId,employmentNav/jobInfoNav/startDate,employmentNav/jobInfoNav/endDate,employmentNav/jobInfoNav/event,employmentNav/jobInfoNav/emplStatus,employmentNav/jobInfoNav/emplStatusNav/externalCode,employmentNav/jobInfoNav/eventNav/externalCode",
									"host": [
										"{{APIServerURLODataV2}}PerPerson"
									],
									"query": [
										{
											"key": "$filter",
											"value": "personIdExternal+eq+'{{TerminatedEmployeePersonIDExternal}}'"
										},
										{
											"key": "$format",
											"value": "ATOM"
										},
										{
											"key": "fromDate",
											"value": "1900-01-01"
										},
										{
											"key": "$expand",
											"value": "personalInfoNav,employmentNav,employmentNav/jobInfoNav,employmentNav/jobInfoNav/emplStatusNav,employmentNav/jobInfoNav/eventNav"
										},
										{
											"key": "$select",
											"value": "personId,personIdExternal,personalInfoNav/firstName,personalInfoNav/lastName,employmentNav/startDate,employmentNav/seniorityDate,employmentNav/originalStartDate,employmentNav/jobInfoNav/seqNumber,employmentNav/jobInfoNav/userId,employmentNav/jobInfoNav/startDate,employmentNav/jobInfoNav/endDate,employmentNav/jobInfoNav/event,employmentNav/jobInfoNav/emplStatus,employmentNav/jobInfoNav/emplStatusNav/externalCode,employmentNav/jobInfoNav/eventNav/externalCode"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get History of Personal Information of a given Person",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PerPersonal?$filter=personIdExternal+eq+'{{EmployeePersonIDExternal}}'&$format={{APIFormatOData}}&fromDate=1900-01-01",
									"host": [
										"{{APIServerURLODataV2}}PerPersonal"
									],
									"query": [
										{
											"key": "$filter",
											"value": "personIdExternal+eq+'{{EmployeePersonIDExternal}}'"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										},
										{
											"key": "fromDate",
											"value": "1900-01-01"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Home Address Information",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PerAddressDEFLT?$top=10&$format=JSON&$filter=addressType+eq+'home'&$select=zipCode,city,address1,personIdExternal",
									"host": [
										"{{APIServerURLODataV2}}PerAddressDEFLT"
									],
									"query": [
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$filter",
											"value": "addressType+eq+'home'"
										},
										{
											"key": "$select",
											"value": "zipCode,city,address1,personIdExternal"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Business Address Information from EmpJob via Navigation",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmpJob?$top=10&$format=JSON&$expand=locationNav/addressNavDEFLT&$select=locationNav/addressNavDEFLT/zipCode,locationNav/addressNavDEFLT/city,locationNav/addressNavDEFLT/address1,userId",
									"host": [
										"{{APIServerURLODataV2}}EmpJob"
									],
									"query": [
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$expand",
											"value": "locationNav/addressNavDEFLT"
										},
										{
											"key": "$select",
											"value": "locationNav/addressNavDEFLT/zipCode,locationNav/addressNavDEFLT/city,locationNav/addressNavDEFLT/address1,userId"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Foundation Objects",
					"item": [
						{
							"name": "Get Location by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}FOLocation?$filter=externalCode+eq+'1710-2009'&$format={{APIFormatOData}}",
									"host": [
										"{{APIServerURLODataV2}}FOLocation"
									],
									"query": [
										{
											"key": "$filter",
											"value": "externalCode+eq+'1710-2009'"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Location by ID Copy 2",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}FOLocation?$filter=externalCode+eq+'1710-2009'&$format={{APIFormatOData}}",
									"host": [
										"{{APIServerURLODataV2}}FOLocation"
									],
									"query": [
										{
											"key": "$filter",
											"value": "externalCode+eq+'1710-2009'"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Location by ID Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}FOLocation?$filter=externalCode+eq+'1710-2009'&$format={{APIFormatOData}}",
									"host": [
										"{{APIServerURLODataV2}}FOLocation"
									],
									"query": [
										{
											"key": "$filter",
											"value": "externalCode+eq+'1710-2009'"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Legal Entity by ID",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}FOCompany?$filter=externalCode+eq+'1710'&$format={{APIFormatOData}}",
									"host": [
										"{{APIServerURLODataV2}}FOCompany"
									],
									"query": [
										{
											"key": "$filter",
											"value": "externalCode+eq+'1710'"
										},
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Employee Time",
					"item": [
						{
							"name": "Get Metadata for Employee Time objects",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmployeeTime,TimeType/$metadata",
									"host": [
										"{{APIServerURLODataV2}}EmployeeTime,TimeType"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Employee Time of an Employee sfadmin",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmployeeTime?$format={{APIFormatOData}}&filter=userId+eq+'{{EmployeeUserID}}'&$filter=userId+eq+'sfadmin'",
									"host": [
										"{{APIServerURLODataV2}}EmployeeTime"
									],
									"query": [
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										},
										{
											"key": "filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										},
										{
											"key": "$filter",
											"value": "userId+eq+'sfadmin'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Employee with EmployeeTime records",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmployeeTime?$format={{APIFormatOData}}&$filter=startswith(userId, 'c') eq true&$select=userId,timeType,createdDateTime,startDate,endDate",
									"host": [
										"{{APIServerURLODataV2}}EmployeeTime"
									],
									"query": [
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										},
										{
											"key": "$filter",
											"value": "startswith(userId, 'c') eq true"
										},
										{
											"key": "$select",
											"value": "userId,timeType,createdDateTime,startDate,endDate"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Employee Time of an Employee cmina",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"__metadata\": {\r\n        \"uri\": \"https://apisalesdemo4.successfactors.com:443/odata/v2/EmployeeTime\",\r\n        \"type\": \"SFOData.EmployeeTime\"\r\n    },\r\n    \"endDate\": \"/Date(1665100800000)/\",\r\n    \"timeType\": \"TT_VAC_REC\",\r\n    \r\n    \"userId\": \"cmina\",\r\n    \"startDate\": \"/Date(1665014400000)/\",\r\n    \"userIdNav\": {\r\n        \"__metadata\": {\r\n            \"uri\": \"User(userId='cmina')\",\r\n            \"type\": \"SFOData.User\"\r\n        }\r\n    },\r\n    \"timeTypeNav\": {\r\n        \"__metadata\": {\r\n            \"uri\": \"TimeType(externalCode='TT_VAC_REC')\",\r\n            \"type\": \"SFOData.TimeType\"\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}EmployeeTime",
									"host": [
										"{{APIServerURLODataV2}}EmployeeTime"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Employee Time of an Employee cmina",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"endDate\": \"/Date(1665100800000)/\",\r\n    \"timeType\": \"TT_VAC_REC\",\r\n    \"cust_Morethan1child\": true,\r\n    \"userId\": \"cmina\",\r\n    \"startDate\": \"/Date(1665014400000)/\",\r\n    \"userIdNav\": {\r\n        \"__metadata\": {\r\n            \"uri\": \"User(userId='cmina')\",\r\n            \"type\": \"SFOData.User\"\r\n        }\r\n    },\r\n    \"timeTypeNav\": {\r\n        \"__metadata\": {\r\n            \"uri\": \"TimeType(externalCode='TT_VAC_REC')\",\r\n            \"type\": \"SFOData.TimeType\"\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}EmployeeTime('84f33efd62bf4820b06c90d25e2cc75b')",
									"host": [
										"{{APIServerURLODataV2}}EmployeeTime('84f33efd62bf4820b06c90d25e2cc75b')"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read All TimeTypes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}TimeType?$format={{APIFormatOData}}",
									"host": [
										"{{APIServerURLODataV2}}TimeType"
									],
									"query": [
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Payment Information",
					"item": [
						{
							"name": "Read Bank Details",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Bank?$format={{APIFormatOData}}&$select=externalCode,bankBranch,city,postalCode,bankName,bankCountry,effectiveStatus,routingNumber,street,businessIdentifierCode&$top=2",
									"host": [
										"{{APIServerURLODataV2}}Bank"
									],
									"query": [
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										},
										{
											"key": "$select",
											"value": "externalCode,bankBranch,city,postalCode,bankName,bankCountry,effectiveStatus,routingNumber,street,businessIdentifierCode"
										},
										{
											"key": "$top",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create or update Bank Details (upsert)",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n     \"__metadata\": {\r\n                    \"uri\": \"https://apisalesdemo8.successfactors.com:443/odata/v2/Bank('12345')\",\r\n                    \"type\": \"SFOData.Bank\"\r\n                },\r\n\"externalCode\":\"{{BankExternalCode}}\",\r\n\"bankBranch\":null,\r\n\"routingNumber\":\"{{BankRoutingNumber}}\",\r\n\"city\":null,\r\n\"street\":null,\r\n\"postalCode\":null,\r\n\"businessIdentifierCode\": null,\r\n\"bankName\":\"Testing Bank of USA\",\r\n\"bankCountry\": \"USA\",\r\n\"effectiveStatus\": \"A\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}upsert?$format={{APIFormatOData}}",
									"host": [
										"{{APIServerURLODataV2}}upsert"
									],
									"query": [
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read Payment Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"const moment = require('moment');\r",
											"var day;\r",
											"postman.setEnvironmentVariable(\"PaymentInformationStartDate\", jsonData.d.results[0].PaymentInformationV3_effectiveStartDate);\r",
											"postman.setEnvironmentVariable(\"PaymentInformationExternalCode\", jsonData.d.results[0].externalCode);\r",
											"\r",
											"day=moment(jsonData.d.results[0].PaymentInformationV3_effectiveStartDate).utc().format();\r",
											"console.log(day);\r",
											"postman.setEnvironmentVariable(\"PaymentInformationStartDateISO\", \"datetime'\"+day+\"'\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PaymentInformationDetailV3?$format={{APIFormatOData}}&$select=PaymentInformationV3_effectiveStartDate,externalCode,PaymentInformationV3_worker,bankCountry,bank,payType,paymentMethod,currency,accountNumber,routingNumber&$filter=PaymentInformationV3_worker eq '{{EmployeeUserID}}' and payType eq 'MAIN'",
									"host": [
										"{{APIServerURLODataV2}}PaymentInformationDetailV3"
									],
									"query": [
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										},
										{
											"key": "$select",
											"value": "PaymentInformationV3_effectiveStartDate,externalCode,PaymentInformationV3_worker,bankCountry,bank,payType,paymentMethod,currency,accountNumber,routingNumber"
										},
										{
											"key": "$filter",
											"value": "PaymentInformationV3_worker eq '{{EmployeeUserID}}' and payType eq 'MAIN'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create or update Payment Information for given Employee",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n                \"__metadata\": {\r\n                    \"uri\": \"https://apisalesdemo8.successfactors.com:443/odata/v2/PaymentInformationDetailV3\",\r\n                    \"type\": \"SFOData.PaymentInformationDetailV3\"\r\n                },\r\n                \"PaymentInformationV3_effectiveStartDate\": \"{{PaymentInformationStartDate}}\",\r\n                \"externalCode\": \"{{PaymentInformationExternalCode}}\",\r\n                \"PaymentInformationV3_worker\": \"{{EmployeeUserID}}\",\r\n                \"routingNumber\": \"{{BankRoutingNumber}}\",\r\n                \"bank\": \"{{BankExternalCode}}\",\r\n                \"payType\": \"MAIN\",\r\n                \"paymentMethod\": \"05\",\r\n                \"currency\": null,\r\n                \"accountNumber\": \"3456874521\",\r\n                \"bankCountry\": \"USA\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}upsert?$format={{APIFormatOData}}",
									"host": [
										"{{APIServerURLODataV2}}upsert"
									],
									"query": [
										{
											"key": "$format",
											"value": "{{APIFormatOData}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Bank Details",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PaymentInformationDetailV3(PaymentInformationV3_effectiveStartDate={{PaymentInformationStartDateISO}},PaymentInformationV3_worker='{{EmployeeUserID}}',externalCode={{PaymentInformationExternalCode}})",
									"host": [
										"{{APIServerURLODataV2}}PaymentInformationDetailV3(PaymentInformationV3_effectiveStartDate={{PaymentInformationStartDateISO}},PaymentInformationV3_worker='{{EmployeeUserID}}',externalCode={{PaymentInformationExternalCode}})"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Compensation Information",
					"item": [
						{
							"name": "Compensation and Recurring Pay Information",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}EmpCompensation?$filter=userId+eq+'{{EmployeeUserID}}'&$format=JSON&$expand=empPayCompRecurringNav,empPayCompRecurringNav/payComponentNav",
									"host": [
										"{{APIServerURLODataV2}}EmpCompensation"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$expand",
											"value": "empPayCompRecurringNav,empPayCompRecurringNav/payComponentNav"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Global Benefits",
					"item": [
						{
							"name": "Benefits",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Benefit?$format=JSON&$filter=benefitId+eq+'CAN_HEALTH'&$expand=employerContributionDetail,employeeContributionDetail,insurancePlans,insurancePlans/coverageOptions,insurancePlans/coverageOptions/coverageDetails,insurancePlans/coverageOptions/enrolleeOptionsNav",
									"host": [
										"{{APIServerURLODataV2}}Benefit"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$filter",
											"value": "benefitId+eq+'CAN_HEALTH'"
										},
										{
											"key": "$expand",
											"value": "employerContributionDetail,employeeContributionDetail,insurancePlans,insurancePlans/coverageOptions,insurancePlans/coverageOptions/coverageDetails,insurancePlans/coverageOptions/enrolleeOptionsNav"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "BenefitsEnrollment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}BenefitEnrollment?$format=JSON&$top=1&$expand=benefitInsurancePlanEnrollmentDetails&$filter=workerId+eq+'802982'",
									"host": [
										"{{APIServerURLODataV2}}BenefitEnrollment"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$top",
											"value": "1"
										},
										{
											"key": "$expand",
											"value": "benefitInsurancePlanEnrollmentDetails"
										},
										{
											"key": "$filter",
											"value": "workerId+eq+'802982'"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "SAP SuccessFactors Compensation",
			"item": [
				{
					"name": "Read User Reward Info of first 10 users",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Read User Reward Info of first 10 users Copy",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Get Spotward",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APIServerURLODataV2}}/odata/v2/SpotAward('{{EmployeeUserID}}')?$format=JSON",
							"host": [
								"{{APIServerURLODataV2}}"
							],
							"path": [
								"odata",
								"v2",
								"SpotAward('{{EmployeeUserID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "JSON"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Spotward Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APIServerURLODataV2}}/odata/v2/SpotAward('{{EmployeeUserID}}')?$format=JSON",
							"host": [
								"{{APIServerURLODataV2}}"
							],
							"path": [
								"odata",
								"v2",
								"SpotAward('{{EmployeeUserID}}')"
							],
							"query": [
								{
									"key": "$format",
									"value": "JSON"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Spot Award of Employee by Employee User ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APIServerURLODataV2}}SpotAward?$top=1&$filter=userId+eq+'{{EmployeeUserID}}'",
							"host": [
								"{{APIServerURLODataV2}}SpotAward"
							],
							"query": [
								{
									"key": "$top",
									"value": "1"
								},
								{
									"key": "$filter",
									"value": "userId+eq+'{{EmployeeUserID}}'"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SAP SuccessFactors Onboarding",
			"item": [
				{
					"name": "Onboarding Metadata",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APIServerURLODataV2}}ONB2Process/$metadata",
							"host": [
								"{{APIServerURLODataV2}}ONB2Process"
							],
							"path": [
								"$metadata"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SAP SuccessFactors Recruiting",
			"item": [
				{
					"name": "JobRequisitions",
					"item": [
						{
							"name": "Get Standard Recruting Template for Job Requisitions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}getRecruitingTemplate?templateType='JOBREQ'&templateName='Standard Job Requisition'&$format=json",
									"host": [
										"{{APIServerURLODataV2}}getRecruitingTemplate"
									],
									"query": [
										{
											"key": "templateType",
											"value": "'JOBREQ'"
										},
										{
											"key": "templateName",
											"value": "'Standard Job Requisition'"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "JobRequisition Metadata",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobRequisition/$metadata",
									"host": [
										"{{APIServerURLODataV2}}JobRequisition"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Requisition by Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobRequisition?$filter=jobReqId+eq+'{{JobReqID}}'&$format=JSON&$expand=location_obj,location_objlist,legalEntity_obj",
									"host": [
										"{{APIServerURLODataV2}}JobRequisition"
									],
									"query": [
										{
											"key": "$filter",
											"value": "jobReqId+eq+'{{JobReqID}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$expand",
											"value": "location_obj,location_objlist,legalEntity_obj"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Requisition by Id Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobRequisition?$filter=jobReqId+eq+'3043'&$format=atom&$expand=location_obj,location_objlist,legalEntity_obj,recruiter,businessUnit_obj,filter1,filter3",
									"host": [
										"{{APIServerURLODataV2}}JobRequisition"
									],
									"query": [
										{
											"key": "$filter",
											"value": "jobReqId+eq+'3043'"
										},
										{
											"key": "$format",
											"value": "atom"
										},
										{
											"key": "$expand",
											"value": "location_obj,location_objlist,legalEntity_obj,recruiter,businessUnit_obj,filter1,filter3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Accentrue - Get Job Requisition",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobRequisition?$filter=jobReqId+eq+'{{JobReqID}}'&$format=JSON&$expand=location_obj,location_objlist,legalEntity_obj",
									"host": [
										"{{APIServerURLODataV2}}JobRequisition"
									],
									"query": [
										{
											"key": "$filter",
											"value": "jobReqId+eq+'{{JobReqID}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$expand",
											"value": "location_obj,location_objlist,legalEntity_obj"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get 10 first Job Requisition with template ID 8",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobRequisition?$filter=templateId+eq+'8'&$format=JSON&$expand=location_obj,location_objlist&$top=10",
									"host": [
										"{{APIServerURLODataV2}}JobRequisition"
									],
									"query": [
										{
											"key": "$filter",
											"value": "templateId+eq+'8'"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$expand",
											"value": "location_obj,location_objlist"
										},
										{
											"key": "$top",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Req. Template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobReqTemplate_Basic_Job_Requisition/$metadata",
									"host": [
										"{{APIServerURLODataV2}}JobReqTemplate_Basic_Job_Requisition"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Req. Template Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobReqTemplate_Gerald_Job_Requisition/$metadata",
									"host": [
										"{{APIServerURLODataV2}}JobReqTemplate_Gerald_Job_Requisition"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Job Requisition",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"country\": \"Germany\",\r\n\"statusSetId\": \"1\",\r\n\"appTemplateId\": \"7\",\r\n\"templateId\": \"8\",\r\n\"jobStartDate\": \"/Date(1660565088000)/\",\r\n\"state\": {\r\n    \"id\": 11645\r\n},\r\n\"jobReqLocale\": {\r\n    \"jobTitle\": \"TEST ANDY API\",\r\n    \"locale\": \"en_US\"\r\n},\r\n\"legalEntity_obj\":{\"externalCode\": \"1710\",\"startDate\": \"/Date(-2208988800000)/\"},\r\n\"location_obj\":[{\"externalCode\": \"1710-2009\",\"startDate\": \"/Date(-2208988800000)/\"}],\r\n\r\n\"filter1\":[{\"id\": \"5616\"}],\r\n\r\n\"filter2\":[{\"id\":\"11982\"}],\r\n\r\n\"filter3\":[{\"id\": \"3979\"}],\r\n\r\n\"recruiter\": {\r\n    \"userName\": \"twalker\"\r\n},\r\n\"hiringManager\": {\r\n    \"userName\": \"twalker\"\r\n},\r\n\"originator\": {\r\n    \"userName\": \"sfadmin\"\r\n}\r\n}\r\n"
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}JobReqTemplate_Gerald_Job_Requisition/$metadata",
									"host": [
										"{{APIServerURLODataV2}}JobReqTemplate_Gerald_Job_Requisition"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Job Requisition Copy",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\"country\": \"United States\",\r\n\"statusSetId\": \"1\",\r\n\"appTemplateId\": \"21\",\r\n\"templateId\": \"23\",\r\n\"jobStartDate\": \"/Date(1660565088000)/\",\r\n\"positionNumber\": \"Position900042\",\r\n\"jobCode\":\"MC_Atech\",\r\n\"numberOpenings\": \"1\",\r\n\"currency\": \"USD\",\r\n\"jobGrade\": \"Salary Grade 3\",\r\n\"jobReqLocale\": {\r\n    \"jobTitle\": \"TEST ANDY API\",\r\n    \"jobDescription\": \"test\",\r\n    \"externalJobDescription\": \"test\",\r\n    \"locale\": \"en_US\"\r\n},\r\n\"legalEntity_obj\":{\"externalCode\": \"1100\",\"startDate\": \"/Date(-2208988800000)/\"},\r\n\"location_obj\":[{\"externalCode\": \"MC_UK_LEE2\",\"startDate\": \"/Date(-2208988800000)/\"}],\r\n\"businessUnit_obj\":{\"externalCode\": \"MC_AVIA\",\"startDate\": \"/Date(-2208988800000)/\"},\r\n\"division_obj\":{\"externalCode\": \"MC_AVP\",\"startDate\": \"/Date(-2208988800000)/\"},\r\n\"department_obj\":{\"externalCode\": \"MC_US_AVP\",\"startDate\": \"/Date(-2208988800000)/\"},\r\n\"costCenter_obj\":{\"externalCode\": \"MC_100016\",\"startDate\": \"/Date(-2208988800000)/\"},\r\n\r\n\r\n\"filter1\":[{\"id\": \"4433\"}],\r\n\r\n\r\n\r\n\"filter3\":[{\"id\": \"5646\"}],\r\n\"filter4\":[{\"id\": \"1714\"}],\r\n\r\n\r\n\"recruiter\": {\r\n    \"userName\": \"igrant\"\r\n},\r\n\"hiringManager\": {\r\n    \"userName\": \"twalker\"\r\n},\r\n\"originator\": {\r\n    \"userName\": \"sfadmin\"\r\n}\r\n}\r\n"
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}JobRequisition?$format=json",
									"host": [
										"{{APIServerURLODataV2}}JobRequisition"
									],
									"query": [
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					]
				},
				{
					"name": "JobApplication",
					"item": [
						{
							"name": "Get all Job Application Statuses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationStatus?$format=JSON&$select=appStatusSetId,appStatusId,appStatusName&$orderby=appStatusId+asc",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationStatus"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$select",
											"value": "appStatusSetId,appStatusId,appStatusName"
										},
										{
											"key": "$orderby",
											"value": "appStatusId+asc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Job Application Statuses Labels",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationStatusLabel?$format=JSON&select=appStatusId,candidateLabel,statusLabel&$orderby=appStatusId+asc",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationStatusLabel"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "select",
											"value": "appStatusId,candidateLabel,statusLabel"
										},
										{
											"key": "$orderby",
											"value": "appStatusId+asc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Job ApplicationStatus Audit Trail",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationStatusAuditTrail?$format=JSON&$top=10&$expand=jobAppStatus",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationStatusAuditTrail"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$expand",
											"value": "jobAppStatus"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get JobApplication Template metadata",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}/JobAppTemplate_NXGEN_Candidate_Detail_Info_Template/$metadata",
									"host": [
										"{{APIServerURLODataV2}}"
									],
									"path": [
										"JobAppTemplate_NXGEN_Candidate_Detail_Info_Template",
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Job Application",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplication?$top=11&$format=JSON&$select=applicationId",
									"host": [
										"{{APIServerURLODataV2}}JobApplication"
									],
									"query": [
										{
											"key": "$top",
											"value": "11"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$select",
											"value": "applicationId"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Candidate",
					"item": [
						{
							"name": "Candidate Metadata",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Candidate,CandidateLight,Attachment/$metadata",
									"host": [
										"{{APIServerURLODataV2}}Candidate,CandidateLight,Attachment"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Standard Recruting Template for Job Requisitions Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}getRecruitingTemplate?templateType='CANDIDATE'&templateName='NXGEN Candidate Profile Template'&$format=json",
									"host": [
										"{{APIServerURLODataV2}}getRecruitingTemplate"
									],
									"query": [
										{
											"key": "templateType",
											"value": "'CANDIDATE'"
										},
										{
											"key": "templateName",
											"value": "'NXGEN Candidate Profile Template'"
										},
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Candidate Light",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"CandidateDefaultID\", jsonData.d.candidateId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n\"country\": \"United States\", \r\n\"firstName\": \"Kai\", \r\n\"lastName\": \"Lopez\",\r\n\"primaryEmail\": \"{{$guid}}@thisgmaildoesnotexist.zz\" \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}CandidateLight?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}CandidateLight"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Candidate with a Resume",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"CandidateForwardedID\", jsonData.d.candidateId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n\"country\": \"United States\", \r\n\"firstName\": \"Hans\", \r\n\"lastName\": \"Mayer\", \r\n\"primaryEmail\": \"{{$guid}}@gmail.com\",\r\n\"contactEmail\": \"{{$guid}}@gmail.com\", \r\n\"cellPhone\": \"+1-415-222-1212\",\r\n\"resume\": {\r\n    \"fileName\": \"image.png\",\r\n    \"ownerIdType\": \"CANDIDATE_ID\",\r\n    \"moduleCategory\": \"RESUME\",\r\n    \"module\": \"RECRUITING\",\r\n    \"viewable\": true,\r\n    \"fileContent\": \"VGVzdDEyMw\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}Candidate?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Candidate"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a CandidateLight",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n\"__metadata\": {\r\n     \"uri\": \"https://apisalesdemo8.successfactors.com/odata/v2/CandidateLight\",\r\n     \"type\": \"SFOData.CandidateLight\"\r\n                },\r\n\"candidateId\": \"{{CandidateDefaultID}}\",\r\n\"country\": \"United States\", \r\n\"city\": \"New York\",\r\n\"firstName\": \"Hans\", \r\n\"lastName\": \"Mayer\", \r\n\"contactEmail\": \"{{$guid}}@gmail.com\", \r\n\"cellPhone\": \"+1-415-222-1212\"\r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}CandidateLight/upsert",
									"host": [
										"{{APIServerURLODataV2}}CandidateLight"
									],
									"path": [
										"upsert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Bulk update of candidates",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\r\n{ \r\n\"__metadata\": {\r\n     \"uri\": \"https://apisalesdemo8.successfactors.com/odata/v2/CandidateLight\",\r\n     \"type\": \"SFOData.CandidateLight\"\r\n                },\r\n\"candidateId\": \"{{CandidateDefaultID}}\",\r\n\"country\": \"United States\", \r\n\"firstName\": \"Hans\", \r\n\"lastName\": \"Mayer\", \r\n\"contactEmail\": \"{{$guid}}@gmail.com\", \r\n\"cellPhone\": \"+1-415-222-1212\"\r\n},\r\n{\r\n\"__metadata\": {\r\n     \"uri\": \"https://apisalesdemo8.successfactors.com/odata/v2/CandidateLight\",\r\n     \"type\": \"SFOData.CandidateLight\"\r\n                },\r\n\r\n\"candidateId\": \"{{CandidateForwardedID}}\",\r\n\"country\": \"United States\", \r\n\"firstName\": \"George\", \r\n\"lastName\": \"Lopez\", \r\n\"contactEmail\": \"{{$guid}}@gmail.com\", \r\n\"cellPhone\": \"+1-415-111-1212\"\r\n} \r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}CandidateLight/upsert",
									"host": [
										"{{APIServerURLODataV2}}CandidateLight"
									],
									"path": [
										"upsert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Candidates by Last Name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"CandidateID\", jsonData.d.results[0].candidateId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}Candidate?$filter=lastName+eq+'Mayer'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Candidate"
									],
									"query": [
										{
											"key": "$filter",
											"value": "lastName+eq+'Mayer'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Count Candidates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}Candidate/$count",
									"host": [
										"{{APIServerURLODataV2}}Candidate"
									],
									"path": [
										"$count"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Created Candidates by ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"CandidateID\", jsonData.d.results[0].candidateId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}Candidate?$filter=candidateId+eq+'{{CandidateDefaultID}}'+or+candidateId+eq+'{{CandidateForwardedID}}'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Candidate"
									],
									"query": [
										{
											"key": "$filter",
											"value": "candidateId+eq+'{{CandidateDefaultID}}'+or+candidateId+eq+'{{CandidateForwardedID}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Created Candidates by ID Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"CandidateID\", jsonData.d.results[0].candidateId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}Candidate?$filter=candidateId+eq+'{{CandidateDefaultID}}'+or+candidateId+eq+'{{CandidateForwardedID}}'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Candidate"
									],
									"query": [
										{
											"key": "$filter",
											"value": "candidateId+eq+'{{CandidateDefaultID}}'+or+candidateId+eq+'{{CandidateForwardedID}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all Candidates using paging",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"CandidateID\", jsonData.d.results[0].candidateId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}Candidate?$top=800&$skip=800&$orderBy=candidateId&$select=candidateId,firstName,lastModifiedDateTime,lastName,primaryEmail&$format=atom",
									"host": [
										"{{APIServerURLODataV2}}Candidate"
									],
									"query": [
										{
											"key": "$top",
											"value": "800"
										},
										{
											"key": "$skip",
											"value": "800"
										},
										{
											"key": "$orderBy",
											"value": "candidateId"
										},
										{
											"key": "$select",
											"value": "candidateId,firstName,lastModifiedDateTime,lastName,primaryEmail"
										},
										{
											"key": "$format",
											"value": "atom"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get open Job Requisition and store it",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"\r",
											"postman.setEnvironmentVariable(\"JobReqID\", jsonData.d.results[0].jobReqId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}JobRequisition?$top=1&$filter=internalStatus+eq+'approved'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}JobRequisition"
									],
									"query": [
										{
											"key": "$top",
											"value": "1"
										},
										{
											"key": "$filter",
											"value": "internalStatus+eq+'approved'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Default a candidate to a Job Requisition",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{ \r\n    \"candidateId\": \"{{CandidateDefaultID}}\", \r\n    \"jobReqId\": \"{{JobReqID}}\", \r\n    \"status\": \"Default\" \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}JobReqFwdCandidates?$format=json",
									"host": [
										"{{APIServerURLODataV2}}JobReqFwdCandidates"
									],
									"query": [
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Forward a candidate to a Job Requisition Copy 2",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{ \r\n    \"candidateId\": \"{{CandidateForwardedID}}\", \r\n    \"jobReqId\": \"{{JobReqID}}\", \r\n    \"status\": \"Forwarded\" \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}JobReqFwdCandidates?$format=json",
									"host": [
										"{{APIServerURLODataV2}}JobReqFwdCandidates"
									],
									"query": [
										{
											"key": "$format",
											"value": "json"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Invite a candidate to apply to a Job Requisition",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\r\n{ \r\n    \"candidateId\": \"{{CandidateID}}\", \r\n    \"jobReqId\": \"{{JobReqID}}\", \r\n    \"status\": \"Default\" \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}inviteToApply?jobReqId={{JobReqID}}L&candidateIds='{{CandidateForwardedID}}'",
									"host": [
										"{{APIServerURLODataV2}}inviteToApply"
									],
									"query": [
										{
											"key": "jobReqId",
											"value": "{{JobReqID}}L"
										},
										{
											"key": "candidateIds",
											"value": "'{{CandidateForwardedID}}'"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "BackgroundCheck",
					"item": [
						{
							"name": "GetBackgroundCheckRequest",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationBackgroundCheckRequest?$format=json&filter=requestId+eq+'121'",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationBackgroundCheckRequest"
									],
									"query": [
										{
											"key": "$format",
											"value": "json"
										},
										{
											"key": "filter",
											"value": "requestId+eq+'121'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GetBackgroundCheckRequest Copy",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"__metadata\": {\r\n\t\t\"uri\": \"JobApplicationBackgroundCheckRequest\",\r\n\t\t\"type\": \"SFOData.JobApplicationBackgroundCheckRequest\"\r\n\t},\r\n\t\"vendorCode\": \"Gerald\",\r\n\t\"vendorOrderNo\": \"Gerald_12112019_87654\",\r\n\t\"orderStatus\": \"OK\",\r\n\t\"applicationId\": \"2822\",\r\n\t\"responseCode\": \"200\",\r\n\t\"responseDetail\": \"Order received and acknowledged.\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}upsert",
									"host": [
										"{{APIServerURLODataV2}}upsert"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "JobApplicationInterview",
					"item": [
						{
							"name": "Get Metadata for JobApplicationInterview",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationInterview,InterviewOverallAssessment,User/$metadata",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationInterview,InterviewOverallAssessment,User"
									],
									"path": [
										"$metadata"
									]
								}
							},
							"response": []
						},
						{
							"name": "Read first 10 JobApplicationInterviews",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationInterview?&$format=JSON&$top=10&$expand=interviewNotes,interviewOverallAssessment,interviewer&select=interviewer/displayName",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationInterview"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$expand",
											"value": "interviewNotes,interviewOverallAssessment,interviewer"
										},
										{
											"key": "select",
											"value": "interviewer/displayName"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read JobApplicationInterviews by Job Requisition",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"postman.setEnvironmentVariable(\"ApplicationInterviewId\",jsonData.d.results[0].applicationInterviewId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationInterview?&$format=JSON&$top=10&$filter=jobRequisition/jobReqId+eq+'2862'&$expand=interviewer&$select=applicationInterviewId,startDate,endDate,applicationId,status,interviewer/displayName,resume,jobApplication,jobRequisition,interviewOverallAssessment,interviewNotes",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationInterview"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$filter",
											"value": "jobRequisition/jobReqId+eq+'2862'"
										},
										{
											"key": "$expand",
											"value": "interviewer"
										},
										{
											"key": "$select",
											"value": "applicationInterviewId,startDate,endDate,applicationId,status,interviewer/displayName,resume,jobApplication,jobRequisition,interviewOverallAssessment,interviewNotes"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create JobApplicationInterview",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse( responseBody );\r",
											"postman.setEnvironmentVariable(\"ApplicationInterviewId\",jsonData.d.results[0].applicationInterviewId);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationInterview?&$format=JSON&$top=10&$filter=jobRequisition/jobReqId+eq+'2862'&$expand=interviewer&$select=applicationInterviewId,startDate,endDate,applicationId,status,interviewer/displayName,resume,jobApplication,jobRequisition,interviewOverallAssessment,interviewNotes",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationInterview"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$filter",
											"value": "jobRequisition/jobReqId+eq+'2862'"
										},
										{
											"key": "$expand",
											"value": "interviewer"
										},
										{
											"key": "$select",
											"value": "applicationInterviewId,startDate,endDate,applicationId,status,interviewer/displayName,resume,jobApplication,jobRequisition,interviewOverallAssessment,interviewNotes"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete JobApplicationInterviews by ApplicationInterviewId",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationInterview(applicationInterviewId={{ApplicationInterviewId}})",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationInterview(applicationInterviewId={{ApplicationInterviewId}})"
									]
								}
							},
							"response": []
						},
						{
							"name": "Individual Assessment",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}InterviewIndividualAssessment?$top=10&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}InterviewIndividualAssessment"
									],
									"query": [
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read JobApplicationAudit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}JobApplicationAudit?$top=200",
									"host": [
										"{{APIServerURLODataV2}}JobApplicationAudit"
									],
									"query": [
										{
											"key": "$top",
											"value": "200"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "SAP SuccessFactors Performance and Goals",
			"item": [
				{
					"name": "Get FormSummarySection (does not work like this, see next call)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APIServerURLODataV2}}FormSummarySection?$top=10",
							"host": [
								"{{APIServerURLODataV2}}FormSummarySection"
							],
							"query": [
								{
									"key": "$top",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get FormSummarySection of Performance Review (Template ID 201) from Carla Grant",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APIServerURLODataV2}}FormHeader?$top=1000&$filter=formTemplateId+eq+'201'+and+sender+eq+'cgrante'&$expand=formContents/pmReviewContentDetail/summarySection/overallFormRating&$format=JSON&$select=sender,formContents/pmReviewContentDetail/summarySection/overallFormRating,formContents/pmReviewContentDetail/summarySection",
							"host": [
								"{{APIServerURLODataV2}}FormHeader"
							],
							"query": [
								{
									"key": "$top",
									"value": "1000"
								},
								{
									"key": "$filter",
									"value": "formTemplateId+eq+'201'+and+sender+eq+'cgrante'"
								},
								{
									"key": "$expand",
									"value": "formContents/pmReviewContentDetail/summarySection/overallFormRating"
								},
								{
									"key": "$format",
									"value": "JSON"
								},
								{
									"key": "$select",
									"value": "sender,formContents/pmReviewContentDetail/summarySection/overallFormRating,formContents/pmReviewContentDetail/summarySection"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Form Templates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{APIServerURLODataV2}}FormTemplate?$format=json",
							"host": [
								"{{APIServerURLODataV2}}FormTemplate"
							],
							"query": [
								{
									"key": "$format",
									"value": "json"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SAP SuccessFactors Learning",
			"item": []
		},
		{
			"name": "SAP SuccessFactors Time Tracking",
			"item": [
				{
					"name": "Clock in Cloud out",
					"item": [
						{
							"name": "Exporting time events",
							"request": {
								"method": "GET",
								"header": []
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "OData Basics",
			"item": [
				{
					"name": "Filter",
					"item": [
						{
							"name": "Get null values (unset) for a binary flag as well as false values",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}cust_SimpleMDF?$filter=cust_booleanWithNullValues+eq+'false'+or+cust_booleanWithNullValues+eq+null&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}cust_SimpleMDF"
									],
									"query": [
										{
											"key": "$filter",
											"value": "cust_booleanWithNullValues+eq+'false'+or+cust_booleanWithNullValues+eq+null"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search User by lastname starting with \"Am\"",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User?$filter=startswith(lastName,'Am')",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"query": [
										{
											"key": "$filter",
											"value": "startswith(lastName,'Am')"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search User by lastname starting with \"Am\" Copy 2",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User?$filter=startswith(lastName,'Am')",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"query": [
										{
											"key": "$filter",
											"value": "startswith(lastName,'Am')"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get User filtered by external Person ID (Deep Filter)",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User?$filter=personKeyNav/personIdExternal+eq+'{{EmployeePersonIDExternal}}'",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"query": [
										{
											"key": "$filter",
											"value": "personKeyNav/personIdExternal+eq+'{{EmployeePersonIDExternal}}'"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Authentication",
					"item": [
						{
							"name": "Read one User using Basic Authentication (Deprecated)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"SAMLAssertion\", responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{APIUserPassword}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{APIUserName}}@{{CompanyID}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}User?$top=1&$format=JSON&$select=firstName,lastName,userId,username",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"query": [
										{
											"key": "$top",
											"value": "1"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$select",
											"value": "firstName,lastName,userId,username"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Read one User using oAuth2 with SAML",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{APIAccessToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}User?$top=1&$format=JSON&$select=firstName,lastName,userId,username",
									"host": [
										"{{APIServerURLODataV2}}User"
									],
									"query": [
										{
											"key": "$top",
											"value": "1"
										},
										{
											"key": "$format",
											"value": "JSON"
										},
										{
											"key": "$select",
											"value": "firstName,lastName,userId,username"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Batching",
					"item": [
						{
							"name": "Create an employee using $batch",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.environment.set(\"User\", \"adiiii\");",
											"pm.environment.set(\"dateOfBirth\", \"/Date(112233600000)/\");",
											"pm.environment.set(\"userId\", \"adiii\");",
											"pm.environment.set(\"username2\", \"adit\");",
											"pm.environment.set(\"firstName\", \"aditya\");",
											"pm.environment.set(\"lastName\", \"shelar\");",
											"",
											"pm.environment.set(\"personIdExternal\", \"ashelar\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Host",
										"value": "apisalesdemo4.successfactors.com",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "multipart/mixed; boundary=batch_36522ad7-fc75-4b56-8c71-56071383e77b",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Type: multipart/mixed; boundary=changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\n\r\nPOST upsert HTTP/1.1\r\nContent-Type: application/json;type=entry\r\n\r\n{\r\n    \"__metadata\": {\r\n        \"uri\": \"User('{{NewEmployeeUserID}}')\",\r\n        \"type\": \"SFOData.User\"\r\n    },\r\n    \"username\" : \"{{NewEmployeeUserName}}\",\r\n    \"userId\" : \"{{NewEmployeeUserID}}\",\r\n    \"status\" : \"Active\"\r\n}\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\n\r\nPOST upsert HTTP/1.1\r\nContent-Type: application/json;type=entry\r\n\r\n{\r\n    \"__metadata\": {\r\n        \"uri\": \"PerPerson\"\r\n    },\r\n    \"personIdExternal\" : \"{{NewEmployeePersonIDExternal}}\",\r\n    \"userId\" : \"{{NewEmployeeUserID}}\",\r\n    \"dateOfBirth\" : \"/Date(112233600000)/\",\r\n    \"countryOfBirth\" : \"USA\"\r\n}\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\n\r\nPOST upsert HTTP/1.1\r\nContent-Type: application/json;type=entry\r\n\r\n{\r\n    \"__metadata\": {\r\n        \"uri\": \"EmpEmployment\"\r\n    },\r\n    \"startDate\":\"/Date(1388534400000)/\",\r\n    \"personIdExternal\": \"{{NewEmployeePersonIDExternal}}\",\r\n    \"userId\": \"{{NewEmployeeUserID}}\",\r\n    \"firstDateWorked\" : \"/Date(1388534400000)/\"\r\n}\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\n\r\nPOST upsert HTTP/1.1\r\nContent-Type: application/json;type=entry\r\n\r\n{\r\n    \"__metadata\": {\r\n        \"uri\": \"EmpJob\"\r\n    },\r\n    \"eventReason\" : \"HIRNEW\",\r\n    \"startDate\" : \"/Date(1388534400000)/\",\r\n    \"jobCode\" : \"50029122\",\r\n    \"userId\" : \"{{NewEmployeeUserID}}\",\r\n    \"company\" : \"1710\",\r\n\t\"businessUnit\" : \"CORP\",\r\n\t\"managerId\" : \"108736\",\r\n\t\"location\" : \"1710-2003\",\r\n\t\"position\" : \"50023041\",\r\n\t\"payScaleArea\" : \"USA/US2\",\r\n\t\"payScaleType\" : \"USA/US1\",\r\n\t\"department\": \"50150001\",\r\n\t\"costCenter\": \"US10_M6\",\r\n\t\"timezone\" : \"America/New_York\"\r\n}\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\n\r\nPOST upsert HTTP/1.1\r\nContent-Type: application/json;type=entry\r\n\r\n{\r\n    \"__metadata\": {\r\n        \"uri\": \"PerPersonal\"\r\n    },\r\n    \"personIdExternal\" : \"{{personIdExternal}}\",\r\n    \"gender\" : \"M\",\r\n    \"firstName\" : \"{{NewEmployeeFirstName}}\",\r\n    \"lastName\" : \"{{NewEmployeeLastName}}\",\r\n    \"nationality\": \"USA\",\r\n    \"nativePreferredLang\": \"10223\"\r\n}\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621--\r\n\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b--"
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}$batch?$format=atom",
									"host": [
										"{{APIServerURLODataV2}}$batch"
									],
									"query": [
										{
											"key": "$format",
											"value": "atom"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "OData Request with virtual URL",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}Photo,User/User?$filter=userId+eq+'{{EmployeeUserID}}'&$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}Photo,User"
									],
									"path": [
										"User"
									],
									"query": [
										{
											"key": "$filter",
											"value": "userId+eq+'{{EmployeeUserID}}'"
										},
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "OData Request with virtual URL Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{APIServerURLODataV2}}PicklistOption,Picklist/Picklist('sysJobCodes')?$expand=picklistOptions",
									"host": [
										"{{APIServerURLODataV2}}PicklistOption,Picklist"
									],
									"path": [
										"Picklist('sysJobCodes')"
									],
									"query": [
										{
											"key": "$expand",
											"value": "picklistOptions"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Batching and referencing previous request",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/mixed; boundary=batch_36522ad7-fc75-4b56-8c71-56071383e77b",
										"type": "default"
									},
									{
										"key": "Host",
										"value": "{{APIServerURL}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Type: multipart/mixed; boundary=changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\n\r\nGET EmpJob(seqNumber=2L,startDate=datetime'2017-01-01T00:00:00',userId='802987') HTTP/1.1\r\nContent-Type: application/json;type=entry\r\n\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\n\r\nGET PicklistLabel?$filter=optionId+eq+$1/emplStatus  HTTP/1.1\r\n\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621--\r\n\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b--"
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}$batch?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}$batch"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Batching and referencing previous request Copy",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/mixed; boundary=batch_36522ad7-fc75-4b56-8c71-56071383e77b",
										"type": "default"
									},
									{
										"key": "Host",
										"value": "api68sales.successfactors.com",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\nContent-ID: 1\r\n\r\nGET EmpJob(seqNumber=2L,startDate=datetime'2017-01-01T00:00:00',userId='802987') HTTP/1.1\r\n\r\n\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\n\r\nGET $1/emplStatusNav/picklistLabels?$top=1  HTTP/1.1\r\n\r\n\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b--"
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}$batch?$format=JSON",
									"host": [
										"{{APIServerURLODataV2}}$batch"
									],
									"query": [
										{
											"key": "$format",
											"value": "JSON"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Batching and referencing previous request Copy 2",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"content-type": true
								}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/mixed; boundary=batch_36522ad7-fc75-4b56-8c71-56071383e77b",
										"type": "default"
									},
									{
										"key": "Host",
										"value": "api68sales.successfactors.com",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "--batch_36522ad7-fc75-4b56-8c71-56071383e77b\r\nContent-Type: multipart/mixed; boundary=changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621\r\nContent-Transfer-Encoding: binary\r\nContent-Type: application/http\r\n\r\nPOST upsert HTTP/1.1\r\nContent-Type: application/json;type=entry\r\n\r\n{\r\n\r\n}\r\n\r\n--changeset_77162fcd-b8da-41ac-a9f8-9357efbbd621--\r\n\r\n--batch_36522ad7-fc75-4b56-8c71-56071383e77b--"
								},
								"url": {
									"raw": "{{APIServerURLODataV2}}$batch?$format=atom",
									"host": [
										"{{APIServerURLODataV2}}$batch"
									],
									"query": [
										{
											"key": "$format",
											"value": "atom"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "generate SAML assertion with User ID (development only not to be used in production!)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"postman.setEnvironmentVariable(\"SAMLAssertion\",responseBody);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "private_key",
							"value": "{{OAuthPrivateKey}}",
							"type": "default"
						},
						{
							"key": "user_id",
							"value": "{{APIUserName}}",
							"type": "default"
						},
						{
							"key": "token_url",
							"value": "{{OAuthTokenURL}}",
							"type": "default"
						},
						{
							"key": "client_id",
							"value": "{{OAuthClientID}}",
							"type": "default"
						},
						{
							"key": "use_username",
							"value": "true",
							"description": "if set to true the parameter user_id has to be filled with a username",
							"type": "default"
						},
						{
							"key": "use_email",
							"value": "false",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{APIServerURL}}/oauth/idp",
					"host": [
						"{{APIServerURL}}"
					],
					"path": [
						"oauth",
						"idp"
					]
				}
			},
			"response": []
		},
		{
			"name": "request access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = JSON.parse( responseBody );\r",
							"postman.setEnvironmentVariable(\"APIAccessToken\", jsonData.access_token);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "company_id",
							"value": "{{CompanyID}}",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{OAuthClientID}}",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "urn:ietf:params:oauth:grant-type:saml2-bearer",
							"type": "text"
						},
						{
							"key": "assertion",
							"value": "{{SAMLAssertion}}",
							"type": "text"
						},
						{
							"key": "new_token",
							"value": "true",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "{{APIServerURL}}/oauth/token",
					"host": [
						"{{APIServerURL}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{APIUserName}}@{{CompanyID}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{APIUserPassword}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "APIAccessToken",
			"value": "",
			"type": "default"
		},
		{
			"key": "SAMLAssertion",
			"value": "",
			"type": "default"
		}
	]
}